!function(e){e.languages.vex=e.languages.extend("clike",{keyword:/\b(?:vector|void|float|int|vector4|matrix|matrix3|break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,preprocessor:{pattern:/(^[\t ]*)#.*/m,lookbehind:!0,alias:"property",inside:{directive:{pattern:/(#)\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\b/,lookbehind:!0,alias:"keyword"}}}}),e.languages.insertBefore("vex","class-name",{namespace:{pattern:re("(\\b(?:namespace|using)\\s+)<<0>>(?:\\s*\\.\\s*<<0>>)*(?=\\s*[;{])",[name]),lookbehind:!0,inside:{punctuation:/\./}},"type-expression":{pattern:re("(\\b(?:default|sizeof|typeof)\\s*\\(\\s*(?!\\s))(?:[^()\\s]|\\s(?!\\s)|<<0>>)*(?=\\s*\\))",[nestedRound]),lookbehind:!0,alias:"class-name",inside:typeInside},"return-type":{pattern:re("<<0>>(?=\\s+(?:<<1>>\\s*(?:=>|[({]|\\.\\s*this\\s*\\[)|this\\s*\\[))",[typeExpression,identifier]),inside:typeInside,alias:"class-name"},"constructor-invocation":{pattern:re("(\\bnew\\s+)<<0>>(?=\\s*[[({])",[typeExpression]),lookbehind:!0,inside:typeInside,alias:"class-name"},"generic-method":{pattern:re("<<0>>\\s*<<1>>(?=\\s*\\()",[name,generic]),inside:{function:re("^<<0>>",[name]),generic:{pattern:RegExp(generic),alias:"class-name",inside:typeInside}}},"type-list":{pattern:re("\\b((?:<<0>>\\s+<<1>>|record\\s+<<1>>\\s*<<5>>|where\\s+<<2>>)\\s*:\\s*)(?:<<3>>|<<4>>|<<1>>\\s*<<5>>|<<6>>)(?:\\s*,\\s*(?:<<3>>|<<4>>|<<6>>))*(?=\\s*(?:where|[{;]|=>|$))",[typeDeclarationKeywords,genericName,name,typeExpression,keywords.source,nestedRound,"\\bnew\\s*\\(\\s*\\)"]),lookbehind:!0,inside:{"record-arguments":{pattern:re("(^(?!new\\s*\\()<<0>>\\s*)<<1>>",[genericName,nestedRound]),lookbehind:!0,greedy:!0,inside:e.languages.csharp},keyword:keywords,"class-name":{pattern:RegExp(typeExpression),greedy:!0,inside:typeInside},punctuation:/[,()]/}},preprocessor:{pattern:/(^[\t ]*)#.*/m,lookbehind:!0,alias:"property",inside:{directive:{pattern:/(#)\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\b/,lookbehind:!0,alias:"keyword"}}}}),e.languages.insertBefore("vex","class-name",{attribute:{pattern:re("((?:^|[^\\s\\w>)?])\\s*\\[\\s*)(?:<<0>>\\s*:\\s*)?<<1>>(?:\\s*,\\s*<<1>>)*(?=\\s*\\])",[attrTarget,attr]),lookbehind:!0,greedy:!0,inside:{target:{pattern:re("^<<0>>(?=\\s*:)",[attrTarget]),alias:"keyword"},"attribute-arguments":{pattern:re("\\(<<0>>*\\)",[roundExpression]),inside:e.languages.csharp},"class-name":{pattern:RegExp(identifier),inside:{punctuation:/\./}},punctuation:/[:,]/}}})}(Prism);